{"mappings":"qhBAWA,IAAAA,EAAAC,EAAA,SAeA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAhBGQ,SAASC,cAAc,SAI/BC,iBAAiB,UAgBzB,SAAsBC,GACpBA,EAAIC,iBAMJ,IAAIC,EAAQC,OAAOH,EAAII,cAAcf,MAAMgB,OACvCC,EAAOH,OAAOH,EAAII,cAAcE,KAAKD,OACrCE,EAASJ,OAAOH,EAAII,cAAcG,OAAOF,OAE7C,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCrB,EAAcqB,EAAGN,GAAOO,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACxCqB,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,MAAU,IAEvEwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAAzB,GAAS0B,OAAOG,QAAQ,sBAAoB1B,QAAiBC,MAAU,IAE3Ea,GAASI,EAEXN,EAAII,cAAcW,O","sources":["src/js/03-promises.js"],"sourcesContent":["// 1. Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) \n// стільки разів, скільки ввели в поле amount.Під час кожного виклику передай їй номер\n// промісу(position), що створюється, і затримку, враховуючи першу затримку(delay),\n// введену користувачем, і крок(step).\n// 2. Доповни код функції createPromise таким чином, щоб вона повертала один проміс,\n// який виконується або відхиляється через delay часу.Значенням промісу повинен бути \n// об'єкт, в якому будуть властивості position і delay зі значеннями однойменних параметрів. \n// Використовуй початковий код функції для вибору того, що потрібно зробити з промісом -\n// виконати або відхилити.\n// 3. Для відображення повідомлень користувачеві, використовуй бібліотеку notiflix.\n\nimport Notiflix from 'notiflix';\n\n// const refs = {\n// form: document.querySelector('.form'),\n// inputDelay: document.querySelector('input[name=\"delay\"]'),\n// inputStep: document.querySelector('input[name=\"step\"]'),\n// inputAmount: document.querySelector('input[name=\"amount\"]'),\n// };\n\nconst formRef = document.querySelector('.form');\n\n// refs.form.addEventListener('submit', onFormSubmit);\n\nformRef.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  });\n};\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  // let delay = Number(refs.inputDelay.value);\n  // let step = Number(refs.inputStep.value);\n  // let amount = Number(refs.inputAmount.value);\n\n  let delay = Number(evt.currentTarget.delay.value);\n  let step = Number(evt.currentTarget.step.value);\n  let amount = Number(evt.currentTarget.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay).then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n    delay += step;\n  };\n  evt.currentTarget.reset();\n};\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","Number","currentTarget","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.63230df2.js.map"}